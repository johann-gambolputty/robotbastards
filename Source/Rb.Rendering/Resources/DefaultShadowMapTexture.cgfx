

//
//	This effect file is used to render depth values into a standard texture map.
//

float4x4 ModelMatrix;
float4x4 ModelViewProjectionMatrix;

struct VertexShaderOutput
{
	float4	m_Position	: POSITION;
	float	m_Depth		: TEXCOORD0;
};

VertexShaderOutput	ShadowMapVertexShader( in float4 pos : POSITION )
{
	VertexShaderOutput output;
	output.m_Position	=  mul( ModelViewProjectionMatrix, pos );
	output.m_Depth		= output.m_Position.z;// / output.m_Position.w;

	return output;
}

float4 ShadowMapFragmentShader( VertexShaderOutput input ) : COLOR
{
	float normDepth = ( ( 1.0f / 1.0f - 1.0f / input.m_Depth ) / ( 1.0f / 1.0f - 1.0f / 1000.0f ) );
	return normDepth.xxxx;
}

technique DefaultTechnique
{
	pass
	{
		LightingEnable	= false;
		ShadeModel		= Smooth;
		FrontFace		= CW;
		DepthTestEnable	= true;
		CullFaceEnable	= true;
		VertexProgram	= compile arbvp1 ShadowMapVertexShader( );
		FragmentProgram	= compile arbfp1 ShadowMapFragmentShader( );
	}
}
