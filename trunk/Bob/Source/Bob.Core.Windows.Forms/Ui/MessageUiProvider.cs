using System;
using System.Windows.Forms;
using Bob.Core.Ui.Interfaces;

namespace Bob.Core.Windows.Forms.Ui
{
	/// <summary>
	/// Implementation of <see cref="IMessageUiProvider"/>. Provides functionality to show UI for simple messages and errors
	/// </summary>
	public class MessageUiProvider : IMessageUiProvider
	{
		/// <summary>
		/// Setup constructor
		/// </summary>
		/// <param name="parentWindow">Parent of all message boxes generated by this object</param>
		public MessageUiProvider( IWin32Window parentWindow )
		{
			m_Parent = parentWindow;
		}

		#region IMessageUiProvider Members

		/// <summary>
		/// Shows an error message dialog with a formatted string message
		/// </summary>
		public void ShowError( string errorMessageFormat, params object[] args )
		{
			string message = string.Format( errorMessageFormat, args );
			MessageBox.Show( m_Parent, message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error );
		}

		/// <summary>
		/// Shows an error message dialog with a formatted string message, and exception details
		/// </summary>
		public void ShowError( Exception ex, string errorMessageFormat, params object[] args )
		{
			string message = string.Format( errorMessageFormat, args );
			if ( ex != null )
			{
				message = message + "\n\n" + ex;
			}
			MessageBox.Show( m_Parent, message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error );
		}

		#endregion

		#region Private Members

		private readonly IWin32Window m_Parent;

		#endregion
	}
}
