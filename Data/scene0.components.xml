<?xml version="1.0" encoding="utf-8" ?>
<rb>

  <!--Default scene setup-->
  <resource path="defaultSceneSetup.components.xml" useCurrentParameters="true"/>

  <!--Stinking hack-->
  <method objectId="this" call="AddServices">
    <parameters>
      <list>
        <object type="Rb.World.RayCaster">
          <object type="Rb.Core.Maths.Plane3">
            <vector3 x="0" y="1" z="0" property="Normal"/>
            <float value="-3" property="Distance"/>
          </object>
        </object>
      </list>
    </parameters>
  </method>

  <!--Debugging-->
  <ref objectId="this" access="Renderables">
  </ref>

  <!--Lighting 
<object type="Rb.World.LightSocket">
  <object type="Rb.Rendering.SpotLight" property="Light">
    <point3 x="50" y="70" z="70" property="Position"/>
    <point3 x="0" y="0" z="0" property="LookAt"/>
    <float value="60" property="ArcDegrees"/>
  </object>
</object>
-->
  <object type="Rb.World.LightSocket">
    <object type="Rb.Rendering.SpotLight" property="Light">
      <point3 x="30" y="20" z="30" property="Position"/>
      <point3 x="0" y="0" z="0" property="LookAt"/>
      <float value="50" property="ArcDegrees"/>
    </object>
  </object>

<!--Environment-->
  <object type="Rb.World.Rendering.SceneRenderable">

    <object type="Rb.Rendering.EffectRenderedObject">

      <object type="Rb.Rendering.Technique" property="Technique">
        <object type="Rb.World.LightMeter"/>
      </object>

      <object type="Rb.Rendering.EffectRenderedObject" property="RenderedObject">
        <resource path="perPixelUntexturedShadowed.cgfx" property="Effect"/>
        <string value="NormalTechnique" property="TechniqueName"/>
        <resource path="simpleEnvironment.dae" property="RenderedObject">
        </resource>
      </object>
    </object>
  </object>

  <!--Resources-->
  <resource path="sarge" id="{7B0132C4-DF4C-4df4-8EC5-63B7A7BF079A}">
    <parameters>
      <float value="0.2" dynProperty="scaleX"/>
      <float value="0.2" dynProperty="scaleY"/>
      <float value="0.2" dynProperty="scaleZ"/>
    </parameters>
    <resource path="perPixelTextured.cgfx" property="Effect"/>
    <string value="NormalTechnique" property="TechniqueName"/>
  </resource>

  <!--Entities-->
  <object type="Rb.World.Entities.Entity3d" id="{BE726C7E-26EA-433e-974A-B57396EE5FB5}">

    <point3 x="20" y="3" z="0" property="NextPosition"/>

    <object type="Rb.Rendering.EffectRenderedObject" property="Graphics">

      <object type="Rb.Rendering.Technique" property="Technique">
        <object type="Rb.World.LightMeter"/>
      </object>

      <instance objectId="{7B0132C4-DF4C-4df4-8EC5-63B7A7BF079A}" property="RenderedObject">
        <ref objectId="{BE726C7E-26EA-433e-974A-B57396EE5FB5}" property="MessageSource"/>
      </instance>

    </object>

    <!-- TODO: Replace with proxy object? (this would allow better serialisation) -->
    <method objectId="this" call="SetupController">
      <parameters>
        <!-- <guid value="{8D7200EA-0D49-4384-9A44-2532ECB1FE55}"/> -->
        <guid value="{9B478B95-97CA-4bf2-8FB9-477367C3A325}"/>
        <string value="userInputListener.components.xml"/>
        <ref objectId="parameters"/>
      </parameters>
    </method>

    <!-- TODO: TestCommandHandler should have the SetupController proxy object as a child, then it
    wouldn't have to add itself to the entity message hub and listen for commands - it would just
    receive them direct from the child controller -->
    <object type="Rb.TestApp.TestCommandHandler" assembly="Rb.TestApp"/>

    <!--
    <object type="Rb.World.Entities.EntityRemoteControl">
      <parameters>
        <guid value="{8D7200EA-0D49-4384-9A44-2532ECB1FE55}"/>
        <string value="userInputListener.components.xml"/>
      </parameters>
    </object>
    -->

  </object>

</rb>
