
float4x4 ModelViewProjectionMatrix;

struct VertexShaderOutput
{
	float4	m_Position : POSITION;
	float4	m_Colour : COLOR0;
};

VertexShaderOutput	TransformPointVertexShader( in float4 pos : POSITION )
{
	VertexShaderOutput output;
	output.m_Position	=  mul( ModelViewProjectionMatrix, pos );
	output.m_Colour		= ( clamp( output.m_Position.z, 0.f, 100.f ) / 100.f ).xxxx;
	return output;
}

technique DefaultTechnique
{
	pass
	{
		LightingEnable	= false;
		ShadeModel		= Smooth;
		FrontFace		= CW;
		DepthTestEnable	= true;
		CullFaceEnable	= true;
		VertexProgram	= compile arbvp1 TransformPointVertexShader( );
	}
}
