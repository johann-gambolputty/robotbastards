- Terrain types
	- Dependent on elevation, slope, latitude
	- Use 2d noise (x,z) to offset type calculation
	- Each type gets their own contribution value, weighted by (e,s,l) weights
		- E(p) == elevation
		- S(p) == slope
		- L(p) == latitude
		- Te(e) == Distribution of terrain type at elevation
		- Ts(e) == Distribution of terrain type at slope
		- Tl(e) == Distribution of terrain type at latitude
		- Tc = Te(E(p)).Ts(S(p)).Tl(L(p)).Noise(p)
		- Partly finished - implemented as TerrainDistribution class

		- Works OK, but would be better if L(p) is removed, and instead add E(p) and S(p)
		for different latitude bands.

- Patch splat texturing without pixel shader U/V wrapping:
	- Patch initial visibility:
		- Determine all terrain types affecting the patch
		- There should be a maximum of N=4, possibly 6, per patch
		- If there's more than N terrain types, just use one of the existing terrain types
		- Munge terrain type byte IDs into an int32
		- Store this value in the patch (TerrainPackID)
		- If terrain pack ID is a 64 bit value, can add quantised distance to camera to last 16-32 bits, for free z-sorting
	- Sort visible patches by TerrainPackID
	- For each visible patch in sorted list:
		- If TerrainPackID has changed from previous visible patch:
			- Load up 

- This same scheme can be used to define terrain packs, with pixel shader u/v wrapping:
	- 
	- 

- Links:

	- Splatting:
		- http://www.cbloom.com/3d/techdocs/splatting.txt

	- Terrain LOD:
		- http://number-none.com/product/Unified%20Rendering%20LOD,%20Part%201/index.html

	- Nice terrain textures:
		- http://www.gamedev.net/community/forums/topic.asp?topic_id=263350

	- SSE problems with noise generation:
		- http://www.gamedev.net/community/forums/topic.asp?topic_id=469446
	
	- Interesting thumbnail provider code:
		- http://www.gamedev.net/community/forums/mod/journal/journal.asp?jn=273102

	- Normal mapping in HLSL
		- http://dotnet.org.za/pieterg/archive/2005/07/29/40407.aspx

	- Chunked LOD
		- http://www.tulrich.com/geekstuff/sig-notes.pdf

	- Vertex attrib pointers (rather than specific client arrays)
		- http://www.opengl.org/sdk/docs/man/xhtml/glVertexAttribPointer.xml

	- TerrAnim8tor
		- (Tan8 UV mapping for terrain textures)
		- http://www.biederman.net/leslie/tutorials/Terranim8or/terrain/terrain3.htm

- Profiling code pretty much done
	- Add bits to controls
	- Save profile logs
		- Add .exe profile viewer that can be associated with profile logs
	- Add named events?
	- Add axis to graphs
	- Add zoom in/out buttons
	- Make data page an expando control rather than a tab page
	- Add pause button
	- Add labelling to graph lines on mouse hover
	- Add sample rate up/down spinner

- stuff
	- Biome
		- http://en.wikipedia.org/wiki/Biome
		- A biome is a climatically and geographically defined area of ecologically similar communities of plants,
		  animals, and soil organisms, often referred to as ecosystems.

	- Earth
		- Equatorial radius: 6,378.1km
		- Polar radius: 6,371.0km
		- Rotational speed at equator: 465.11 m/s

	- Moon
		- Equatorial radius: 1,737.10 km
		- Rotational speed at equator: 4.627 m/s

- TODO
	- Terrain
		- Geomorphing
		- Pop slope/altitude determination in fragment shader (it's done at a vertex level - interpolation helps but seems wrong)
		- Local terrain function sampling to determine high-quality normals even for coarse patches
	- Assets
		- Design to Game builds
		- Game assets aware of changes to design objects
			- Perhaps with a service that monitors the design folders?
			- Needs following commands:
				- "Rebuild All"
				- "Build All" (only updates game assets with an earlier timestamp that design assets)
				- "ReBuild" (builds a single named asset)
				- "Build" (builds a single asset)

- DONE
	

		