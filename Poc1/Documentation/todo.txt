
- TODO
	- Terrain
		- H: Force error for patches with > threshold radius
		- H: Investigate why error does not appear to be totally correct
		- H: Ground displacement requires connected patches (vertical skirts show up)
		- M: Ground displacement needs to take place on the plane defined by the tangent on the planet's sphere (currently always x-z)
		- M: Add multi-fractals to the displacer set
		- M: Geomorphing
		- M: Add pre-process noise to the terrain texture
		- M: Cull quad tree nodes (frustum + horizon culling for spherical planets)
		- L: Pop slope/altitude determination in fragment shader (it's done at a vertex level - can work it out implicitly in frag shader)
		- L: Add terrain pack resolution parameter to terrain shader
		- ?: Now that patches are independent of one another (skirts), can use UniPoint as patch centre (unique transform per patch, though
	- Environment
		- L: Volumetric clouds
		- L: Vegetation
		- L: Animal life
	- Planets
		- H: Large radius planets (>1000km)
			- H: Fix larger radius planets (lots of z-fighting, no terrain detail)
			- H: combine terrain/marble rendering using z clipping planes (take a look at PPSM)
		- H: Atmospheric shaders
		- M: Add planetary rings
		- M: Add moons back in
		- M: Add sun
		- M: Add light scattering post-process (god-rays)
		- L: Crater terrain function for moons
		- L: Crater terrain types for moons
		- L: Gas-giant shaders
		- L: Non-spherical planets
			- L: Ring-worlds
			- L: Hollow spheres
		- ?: Restore planet cube map (necessary?)
	- Water
		- H: Improve water rendering
		- L: Lakes
		- L: Rivers
	- Cities
		- L: Buildings
		- L: Roads
		- L: Traffic
		- L: Pedestrians
	- Solar system
		- M: Proper procedural star-spheres
	- Assets
		- H: Catch exceptions thrown by asset loads
		- L: Asset build should have a UI (progress bar, output text)
		- L: Add bigfile support
		- L: Game assets aware of changes to design objects
			- Perhaps with a service that monitors the design folders?
			- Needs following commands:
				- "Rebuild All"
				- "Build All" (only updates game assets with an earlier timestamp that design assets)
				- "ReBuild" (builds a single named asset)
				- "Build" (builds a single asset)
			- In-game UI
			- Build/Rebuild menu items
	- UI
		- H: Get tweaker variables working
		- M: Try getting WPF to work
		- M: Profiling code pretty much done
			- Profile UI needs fixed scales (adaptive scales is stupid and misleading)
			- Add bits to controls
			- Save profile logs
			- Add .exe profile viewer that can be associated with profile logs
			- Add named events?
			- Add axis to graphs
			- Add zoom in/out buttons
			- Make data page an expando control rather than a tab page
			- Add pause button
			- Add labelling to graph lines on mouse hover
			- Add sample rate up/down spinner
		- L: Ship HUD
	- Ships
		- H: Basic ship graphics
		- H: Get basic ship dynamics working
		- M: Connectors
		- M: Shaders
		- M: Simple ship combat
		- L: Internal ship modelling

	- Networking
		- H: Extend RUNT
	- Tools
		- H: Fix terrain texture generator to use relative paths
		- L: Add MRU file list to terrain texture tool
	- Graphics Misc.
		- H: Fix game client to use new rendering library directories
		- H: Shadows
		- M: Add support to load rendering library objects from assemblies in the new rendering library layout (can keep
		  assembly selector, but it's not necessary anymore)
		- M: Particle systems
		- M: Make the effect assembly load on-demand (i.e. when the effect manager is referenced)
		- M: Add configuration options for effect assembly (or perhaps make this data-driven, so when a CG file is loaded, use CG libraries?)
		- M: Fullscreen mode
		- L: Multimonitor support

	- Profiling
		- H: Patch rendering has become slow

	- Misc.
		- H: Add unit-test directory
		- M: Remove fast noise test (move to console app. project in tests directory)

- DONE
	- H: Sea
	- M: Add noise to terrain type texture
	- L: Add x/z displacement decorator class
	- H: Distance to terrain patch should be measured as closest distance to patch bounding volume
	- H: Fix terrain skirts
	- H: Make cloud transitions less pronounced
	- H: Vertex indexing error when ReduceDetail() is called on a patch with the new mt terrain builder
	- H: Cloud level dependent on planet radius
	- H: Terrain function sphere needs radius dependent on radius of planet (or moons = extra spiky)
	- M: Move rendering assemblies to separate sub-directories (e.g. bin\OpenGL), rather than making them explicit references.
	- Assets: Design to Game builds
	- Terrain: Multi-threading to queue up patch creation
	- Terrain: Keep terrain patches after they are popped
	- Terrain: Clamp slope 
	- Environment: Simple cloud cover	
	- Terrain: Local terrain function sampling to determine high-quality normals even for coarse patches
	- Misc: Refactoring: Split out fast terrain code into Poc1.Fast.Terrain (keep Poc1.Fast for shared stuff like aligned allocations)

